// Code generated by goa v3.19.1, DO NOT EDIT.
//
// ForwarderService HTTP client CLI support package
//
// Command:
// $ goa gen
// github.com/LeonDavidZipp/StackITCloudAcceleratorCodingChallenge/src/api/design
// --output ./src/api

package client

import (
	"encoding/json"
	"fmt"

	forwarderservice "github.com/LeonDavidZipp/StackITCloudAcceleratorCodingChallenge/src/api/gen/forwarder_service"
)

// BuildForwardPayload builds the payload for the ForwarderService forward
// endpoint from CLI flags.
func BuildForwardPayload(forwarderServiceForwardBody string) (*forwarderservice.Message, error) {
	var err error
	var body ForwardRequestBody
	{
		err = json.Unmarshal([]byte(forwarderServiceForwardBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"description\": \"Perspiciatis et.\",\n      \"name\": \"Exercitationem cumque eius minus perferendis.\",\n      \"type\": \"Qui ut laborum aut.\"\n   }'")
		}
	}
	v := &forwarderservice.Message{
		Type:        body.Type,
		Name:        body.Name,
		Description: body.Description,
	}

	return v, nil
}
