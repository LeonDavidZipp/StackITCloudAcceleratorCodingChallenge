// Code generated by goa v3.19.1, DO NOT EDIT.
//
// ForwarderService gRPC server types
//
// Command:
// $ goa gen
// github.com/LeonDavidZipp/StackITCloudAcceleratorCodingChallenge/src/api/design
// --output ./src/api

package server

import (
	forwarderservice "github.com/LeonDavidZipp/StackITCloudAcceleratorCodingChallenge/src/api/gen/forwarder_service"
	forwarder_servicepb "github.com/LeonDavidZipp/StackITCloudAcceleratorCodingChallenge/src/api/gen/grpc/forwarder_service/pb"
)

// NewForwardPayload builds the payload of the "forward" endpoint of the
// "ForwarderService" service from the gRPC request type.
func NewForwardPayload(message *forwarder_servicepb.ForwardRequest) *forwarderservice.Notification {
	v := &forwarderservice.Notification{
		Type:        message.Type,
		Name:        message.Name,
		Description: message.Description,
	}
	return v
}

// NewProtoForwardResponse builds the gRPC response type from the result of the
// "forward" endpoint of the "ForwarderService" service.
func NewProtoForwardResponse() *forwarder_servicepb.ForwardResponse {
	message := &forwarder_servicepb.ForwardResponse{}
	return message
}
